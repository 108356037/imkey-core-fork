name: Build Release Android

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

env:
  CARGO_TERM_COLOR: always #https://doc.rust-lang.org/cargo/reference/config.html#termcolor
#   OPENSSL_LIB_DIR: ${{github.workspace}}/depend/openssl/android-arm64/lib
#   OPENSSL_INCLUDE_DIR: ${{github.workspace}}/depend/openssl/android-arm64/include
#   AR: /opt/hostedtoolcache/ndk/r22b/x64/toolchains/llvm/prebuilt/linux-x86_64/bin/arm-linux-androideabi-ar
#   CC: /opt/hostedtoolcache/ndk/r22b/x64/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-androideabi29-clang
#   LD: /opt/hostedtoolcache/ndk/r22b/x64/toolchains/llvm/prebuilt/linux-x86_64/bin/arm-linux-androideabi-ld
  ANDROID_NDK_TOOLCHAINS: /Users/runner/hostedtoolcache/ndk/r22b/x64/toolchains/llvm/prebuilt/darwin-x86_64/bin
  
  
jobs:

  publish-to-github:
    name: Publish to Github
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        include:
#         - build: x86
#           os: ubuntu-latest
#           rust: nightly
#           target: i686-linux-android
#           linker: i686-linux-android29-clang
#           ar: i686-linux-android-ar
#           cc: i686-linux-android29-clang
#           ld: i686-linux-android-ld
#           openssl: android-x86_64
#           loglib: x86_64-linux-android
#           cross: true
        - build: x86_64
          os: macos-12
          rust: nightly
          target: x86_64-linux-android
          linker: x86_64-linux-android29-clang
          ar: x86_64-linux-android-ar
          cc: x86_64-linux-android29-clang
          ld: x86_64-linux-android-ld
          openssl: android-x86_64
          loglib: x86_64-linux-android
          cross: true
#         - build: arm-v7
#           os: ubuntu-latest
#           rust: nightly
#           target: armv7-linux-androideabi
#           linker: armv7a-linux-androideabi29-clang
#           ar: arm-linux-androideabi-ar
#           cc: armv7a-linux-androideabi29-clang
#           ld: arm-linux-androideabi-ld
#           openssl: android-arm
#           loglib: armv7-linux-androideabi
#           cross: true
#         - build: aarch64
#           os: ubuntu-latest
#           rust: nightly
#           target: aarch64-linux-android
#           linker: aarch64-linux-android29-clang
#           ar: aarch64-linux-android-ar
#           cc: aarch64-linux-android29-clang
#           ld: aarch64-linux-android-ld
#           openssl: android-arm64
#           loglib: aarch64-linux-android
#           cross: true
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: Cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          ~/.rustup
          target
        key: ${{ runner.os }}-${{ matrix.rust }}

#     - name: Install Linker
#       if: matrix.cross
#       run: |
#         sudo apt-get update
#         sudo apt-get install ${{ matrix.linker }}

    - name: Install Rust
      run: |
        rustup install ${{ matrix.rust }}
        rustup default nightly
        rustup target add ${{ matrix.target }}
        rustup show
        
#     - name: Install libusb
#       run: | 
#        sudo apt-get install libusb-dev
#        sudo apt-get install libusb-1.0-0-dev
#        sudo apt-get install libunwind-dev
       
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
       
    - name: Android NDK set
      uses: nttld/setup-ndk@v1
      id: setup-ndk
      with:
        ndk-version: r22b
        add-to-path: true
        
    - name: set config file
      run: |
        echo '[target.${{ matrix.target }}]' >> config
        echo 'ar=$ANDROID_NDK_TOOLCHAINS/${{ matrix.ar }}' >> config
        echo 'linker=$ANDROID_NDK_TOOLCHAINS/${{ matrix.cc }}' >> config
        cat config

#     - name: Build
#       run: | 
#         echo ${{ matrix.openssl }}
#         export OPENSSL_LIB_DIR=${{github.workspace}}/depend/openssl/${{ matrix.openssl }}/lib
#         export OPENSSL_INCLUDE_DIR=${{github.workspace}}/depend/openssl/${{ matrix.openssl }}/include
#         echo ${{ matrix.ar }}
#         echo ${{ matrix.cc }}
#         echo ${{ matrix.ld }}
#         AR=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/darwin-x86_64/bin/${{ matrix.ar }}
#         CC=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/darwin-x86_64/bin/${{ matrix.cc }}
#         LD=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/darwin-x86_64/bin/${{ matrix.ld }}
#         env OPENSSL_STATIC=1
#         echo ${{ matrix.target }}
#         cargo build --release --target ${{ matrix.target }}
