name: Cross Build Release Android

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

env:
  CARGO_TERM_COLOR: always
  ANDROID_NDK_TOOLCHAINS: /usr/local/lib/android/sdk/ndk/25.1.8937393/toolchains/llvm/prebuilt/linux-x86_64/bin
  OPENSSL_DIR: ${{github.workspace}}/depend/openssl
  OPENSSL_LIB_ROOT_DIR: ${{github.workspace}}/depend/openssl
  OPENSSL_INCLUDE_ROOT_DIR: ${{github.workspace}}/depend/openssl
  OPENSSL_LIB_DIR: ${{github.workspace}}/depend/openssl
  X86_64_LINUX_ANDROID_OPENSSL_LIB_DIR: ${{github.workspace}}/depend/openssl/android-x86_64/lib
  I686_LINUX_ANDROID_OPENSSL_LIB_DIR: ${{github.workspace}}/depend/openssl/android-x86/lib
  ARMV7_LINUX_ANDROIDEABI_OPENSSL_LIB_DIR: ${{github.workspace}}/depend/openssl/android-arm/lib
  AARCH64_LINUX_ANDROID_OPENSSL_LIB_DIR: ${{github.workspace}}/depend/openssl/android-arm64/lib
  OPENSSL_INCLUDE_DIR: ${{github.workspace}}/depend/openssl
  X86_64_LINUX_ANDROID_OPENSSL_INCLUDE_DIR: ${{github.workspace}}/depend/openssl/android-x86_64/include
  I686_LINUX_ANDROID_OPENSSL_INCLUDE_DIR: ${{github.workspace}}/depend/openssl/android-x86/include
  ARMV7_LINUX_ANDROIDEABI_OPENSSL_INCLUDE_DIR: ${{github.workspace}}/depend/openssl/android-arm/include
  AARCH64_LINUX_ANDROID_OPENSSL_INCLUDE_DIR: ${{github.workspace}}/depend/openssl/android-arm64/include
    
  
jobs:

  publish-to-github:
    name: Publish to Github
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        include:
#         - build: x86
#           os: ubuntu-22.04
#           rust: nightly
#           target: i686-linux-android
#           linker: i686-linux-android29-clang
#           ar: i686-linux-android-ar
#           cc: i686-linux-android29-clang
#           ld: i686-linux-android-ld
#           openssl: android-x86_64
#           loglib: x86_64-linux-android
#           cross: true
        - build: x86_64
          target: x86_64-linux-android
          linker: x86_64-linux-android29-clang
          cross: true
#         - build: arm-v7
#           os: ubuntu-22.04
#           rust: nightly
#           target: armv7-linux-androideabi
#           linker: armv7a-linux-androideabi29-clang
#           ar: arm-linux-androideabi-ar
#           cc: armv7a-linux-androideabi29-clang
#           ld: arm-linux-androideabi-ld
#           openssl: android-arm
#           loglib: armv7-linux-androideabi
#           cross: true
#         - build: aarch64
#           os: ubuntu-22.04
#           rust: nightly
#           target: aarch64-linux-android
#           linker: aarch64-linux-android29-clang
#           ar: aarch64-linux-android-ar
#           cc: aarch64-linux-android29-clang
#           ld: aarch64-linux-android-ld
#           openssl: android-arm64
#           loglib: aarch64-linux-android
#           cross: true
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: Cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          ~/.rustup
          target
        key: ${{ runner.os }}-nightly

    - name: Install Rust
      run: |
        rustup install nightly
        rustup default nightly
        rustup target add ${{ matrix.target }}
        rustup show
        
    - name: Install Libusb
      run: | 
       sudo apt-get install libusb-dev
       sudo apt-get install libusb-1.0-0-dev
       
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
       
#     - name: Android NDK set
#       uses: nttld/setup-ndk@v1
#       id: setup-ndk
#       with:
#         ndk-version: r25b
#         add-to-path: true
        
    - name: Set Config File
      run: |
        echo '[target.${{ matrix.target }}]' >> ~/.cargo/config
        echo 'ar="${{env.ANDROID_NDK_TOOLCHAINS}}/llvm-ar"' >> ~/.cargo/config
        echo 'linker="${{env.ANDROID_NDK_TOOLCHAINS}}/${{ matrix.linker }}"' >> ~/.cargo/config
        cat ~/.cargo/config
        ls ~/.cargo/
        ls /usr/local/lib/android/sdk/ndk/25.1.8937393/toolchains/llvm/prebuilt/linux-x86_64/bin

    - name: Build
      run: | 
        echo ${{ matrix.linker }}
        AR=/usr/local/lib/android/sdk/ndk/25.1.8937393/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar
        CC=/usr/local/lib/android/sdk/ndk/25.1.8937393/toolchains/llvm/prebuilt/linux-x86_64/bin/${{ matrix.linker }}
        LD=/usr/local/lib/android/sdk/ndk/25.1.8937393/toolchains/llvm/prebuilt/linux-x86_64/bin/ld
        PKG_CONFIG_ALLOW_CROSS=1
        env OPENSSL_STATIC=1
        echo ${{ matrix.target }}
        cargo build --release --target ${{ matrix.target }}
