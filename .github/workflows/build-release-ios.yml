name: Build Release IOS

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

env:
  CARGO_TERM_COLOR: always
  
jobs:

  build:
    name: build release
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: Cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          ~/.rustup
          target
        key: macos-latest-nightly

    - name: Install Rust
      run: |
        rustup install stable
        rustup default nightly
        rustup target add aarch64-apple-ios x86_64-apple-ios
        rustup show
        cargo install cargo-lipo

    - name: Build
      run: | 
        cargo lipo --release --targets aarch64-apple-ios x86_64-apple-ios
        ls
        cbindgen ./api/src/lib.rs -l c > ${{github.workspace}}/target/connector.h
        ls ./target/
        
        LIBS=./mobile-sdk/imKeyCoreX/imKeyCoreX
        cp ./target/universal/release/libconnector.a $LIBS/libconnector.a
        cp ./target/connector.h $LIBS/connector.h
        if [ -d "./ios-release" ]; then
          rm -rf ./ios-release/*
        fi
        
        pushd ./mobile-sdk/imKeyCoreX
        BUILD_DIR=./Products
        BUILD_ROOT=./Products
        SYMROOT=./Products
        BUILD_PRODUCTS=./Products
        CONFIGURATION=Release
        PROJECT_NAME=imKeyCoreX
        
        mkdir -p $BUILD_DIR
        UNIVERSAL_OUTPUTFOLDER=$BUILD_DIR/$CONFIGURATION-Universal
        mkdir -p $UNIVERSAL_OUTPUTFOLDER
        echo aaaaaaa
        ls $UNIVERSAL_OUTPUTFOLDER
        xcodebuild -target $PROJECT_NAME ONLY_ACTIVE_ARCH=NO -configuration $CONFIGURATION -sdk iphoneos BUILD_DIR=$BUILD_DIR BUILD_ROOT=$BUILD_ROOT build
        
        
